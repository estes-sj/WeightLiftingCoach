
poseNet -- loading pose estimation model from:
        -- model        networks/Pose-ResNet18-Body/pose_resnet18_body.onnx
        -- topology     networks/Pose-ResNet18-Body/human_pose.json
        -- colors       networks/Pose-ResNet18-Body/colors.txt
        -- input_blob   'input'
        -- output_cmap  'cmap'
        -- output_paf   'paf'
        -- threshold    0.150000
        -- batch_size   1

[TRT]    topology -- keypoint 0  nose
[TRT]    topology -- keypoint 1  left_eye
[TRT]    topology -- keypoint 2  right_eye
[TRT]    topology -- keypoint 3  left_ear
[TRT]    topology -- keypoint 4  right_ear
[TRT]    topology -- keypoint 5  left_shoulder
[TRT]    topology -- keypoint 6  right_shoulder
[TRT]    topology -- keypoint 7  left_elbow
[TRT]    topology -- keypoint 8  right_elbow
[TRT]    topology -- keypoint 9  left_wrist
[TRT]    topology -- keypoint 10  right_wrist
[TRT]    topology -- keypoint 11  left_hip
[TRT]    topology -- keypoint 12  right_hip
[TRT]    topology -- keypoint 13  left_knee
[TRT]    topology -- keypoint 14  right_knee
[TRT]    topology -- keypoint 15  left_ankle
[TRT]    topology -- keypoint 16  right_ankle
[TRT]    topology -- keypoint 17  neck
[TRT]    topology -- skeleton link 0  16 14
[TRT]    topology -- skeleton link 1  14 12
[TRT]    topology -- skeleton link 2  17 15
[TRT]    topology -- skeleton link 3  15 13
[TRT]    topology -- skeleton link 4  12 13
[TRT]    topology -- skeleton link 5  6 8
[TRT]    topology -- skeleton link 6  7 9
[TRT]    topology -- skeleton link 7  8 10
[TRT]    topology -- skeleton link 8  9 11
[TRT]    topology -- skeleton link 9  2 3
[TRT]    topology -- skeleton link 10  1 2
[TRT]    topology -- skeleton link 11  1 3
[TRT]    topology -- skeleton link 12  2 4
[TRT]    topology -- skeleton link 13  3 5
[TRT]    topology -- skeleton link 14  4 6
[TRT]    topology -- skeleton link 15  5 7
[TRT]    topology -- skeleton link 16  18 1
[TRT]    topology -- skeleton link 17  18 6
[TRT]    topology -- skeleton link 18  18 7
[TRT]    topology -- skeleton link 19  18 12
[TRT]    topology -- skeleton link 20  18 13
[TRT]    poseNet -- keypoint 00 'nose'  color 255 0 85 255
[TRT]    poseNet -- keypoint 01 'left_eye'  color 255 0 0 255
[TRT]    poseNet -- keypoint 02 'right_eye'  color 255 85 0 255
[TRT]    poseNet -- keypoint 03 'left_ear'  color 255 170 0 255
[TRT]    poseNet -- keypoint 04 'right_ear'  color 255 255 0 255
[TRT]    poseNet -- keypoint 05 'left_shoulder'  color 170 255 0 255
[TRT]    poseNet -- keypoint 06 'right_shoulder'  color 85 255 0 255
[TRT]    poseNet -- keypoint 07 'left_elbow'  color 0 255 0 255
[TRT]    poseNet -- keypoint 08 'right_elbow'  color 0 255 85 255
[TRT]    poseNet -- keypoint 09 'left_wrist'  color 0 255 170 255
[TRT]    poseNet -- keypoint 10 'right_wrist'  color 0 255 255 255
[TRT]    poseNet -- keypoint 11 'left_hip'  color 0 170 255 255
[TRT]    poseNet -- keypoint 12 'right_hip'  color 0 85 255 255
[TRT]    poseNet -- keypoint 13 'left_knee'  color 0 0 255 255
[TRT]    poseNet -- keypoint 14 'right_knee'  color 255 0 170 255
[TRT]    poseNet -- keypoint 15 'left_ankle'  color 170 0 255 255
[TRT]    poseNet -- keypoint 16 'right_ankle'  color 255 0 255 255
[TRT]    poseNet -- keypoint 17 'neck'  color 85 0 255 255
[TRT]    poseNet -- loaded 18 class colors
[TRT]    TensorRT version 8.0.1
[TRT]    loading NVIDIA plugins...
[TRT]    Registered plugin creator - ::GridAnchor_TRT version 1
[TRT]    Registered plugin creator - ::GridAnchorRect_TRT version 1
[TRT]    Registered plugin creator - ::NMS_TRT version 1
[TRT]    Registered plugin creator - ::Reorg_TRT version 1
[TRT]    Registered plugin creator - ::Region_TRT version 1
[TRT]    Registered plugin creator - ::Clip_TRT version 1
[TRT]    Registered plugin creator - ::LReLU_TRT version 1
[TRT]    Registered plugin creator - ::PriorBox_TRT version 1
[TRT]    Registered plugin creator - ::Normalize_TRT version 1
[TRT]    Registered plugin creator - ::ScatterND version 1
[TRT]    Registered plugin creator - ::RPROI_TRT version 1
[TRT]    Registered plugin creator - ::BatchedNMS_TRT version 1
[TRT]    Registered plugin creator - ::BatchedNMSDynamic_TRT version 1
[0;31m[TRT]    Could not register plugin creator -  ::FlattenConcat_TRT version 1
[0m[TRT]    Registered plugin creator - ::CropAndResize version 1
[TRT]    Registered plugin creator - ::DetectionLayer_TRT version 1
[TRT]    Registered plugin creator - ::EfficientNMS_ONNX_TRT version 1
[TRT]    Registered plugin creator - ::EfficientNMS_TRT version 1
[TRT]    Registered plugin creator - ::Proposal version 1
[TRT]    Registered plugin creator - ::ProposalLayer_TRT version 1
[TRT]    Registered plugin creator - ::PyramidROIAlign_TRT version 1
[TRT]    Registered plugin creator - ::ResizeNearest_TRT version 1
[TRT]    Registered plugin creator - ::Split version 1
[TRT]    Registered plugin creator - ::SpecialSlice_TRT version 1
[TRT]    Registered plugin creator - ::InstanceNormalization_TRT version 1
[TRT]    detected model format - ONNX  (extension '.onnx')
[TRT]    desired precision specified for GPU: FASTEST
[0;33m[TRT]    requested fasted precision for device GPU without providing valid calibrator, disabling INT8
[0m[TRT]    [MemUsageChange] Init CUDA: CPU +197, GPU +0, now: CPU 228, GPU 1845 (MiB)
[TRT]    native precisions detected for GPU:  FP32, FP16
[TRT]    selecting fastest native precision for GPU:  FP16
[TRT]    attempting to open engine cache file /usr/local/bin/networks/Pose-ResNet18-Body/pose_resnet18_body.onnx.1.1.8001.GPU.FP16.engine
[TRT]    loading network plan from engine cache... /usr/local/bin/networks/Pose-ResNet18-Body/pose_resnet18_body.onnx.1.1.8001.GPU.FP16.engine
[0;32m[TRT]    device GPU, loaded /usr/local/bin/networks/Pose-ResNet18-Body/pose_resnet18_body.onnx
[0m[TRT]    [MemUsageChange] Init CUDA: CPU +0, GPU +0, now: CPU 308, GPU 1943 (MiB)
[TRT]    Loaded engine size: 79 MB
[TRT]    [MemUsageSnapshot] deserializeCudaEngine begin: CPU 308 MiB, GPU 1943 MiB
[0;33m[TRT]    Using an engine plan file across different models of devices is not recommended and is likely to affect performance or even cause errors.
[0m[TRT]    Using cublas a tactic source
[TRT]    [MemUsageChange] Init cuBLAS/cuBLASLt: CPU +158, GPU -3, now: CPU 467, GPU 1941 (MiB)
[TRT]    Using cuDNN as a tactic source
[TRT]    [MemUsageChange] Init cuDNN: CPU +240, GPU -15, now: CPU 707, GPU 1926 (MiB)
[TRT]    [MemUsageChange] Init cuBLAS/cuBLASLt: CPU +0, GPU +0, now: CPU 707, GPU 1930 (MiB)
[TRT]    Deserialization required 6569780 microseconds.
[TRT]    [MemUsageSnapshot] deserializeCudaEngine end: CPU 707 MiB, GPU 1930 MiB
[TRT]    [MemUsageSnapshot] ExecutionContext creation begin: CPU 707 MiB, GPU 1932 MiB
[TRT]    Using cublas a tactic source
[TRT]    [MemUsageChange] Init cuBLAS/cuBLASLt: CPU +0, GPU +3, now: CPU 707, GPU 1935 (MiB)
[TRT]    Using cuDNN as a tactic source
[TRT]    [MemUsageChange] Init cuDNN: CPU +0, GPU -1, now: CPU 707, GPU 1934 (MiB)
[TRT]    Total per-runner device memory is 49521152
[TRT]    Total per-runner host memory is 30160
[TRT]    Allocated activation device memory of size 18128896
[TRT]    [MemUsageSnapshot] ExecutionContext creation end: CPU 707 MiB, GPU 1927 MiB
[TRT]    
[TRT]    CUDA engine context initialized on device GPU:
[TRT]       -- layers       43
[TRT]       -- maxBatchSize 1
[TRT]       -- deviceMemory 18128896
[TRT]       -- bindings     3
[TRT]       binding 0
                -- index   0
                -- name    'input'
                -- type    FP32
                -- in/out  INPUT
                -- # dims  4
                -- dim #0  1
                -- dim #1  3
                -- dim #2  224
                -- dim #3  224
[TRT]       binding 1
                -- index   1
                -- name    'cmap'
                -- type    FP32
                -- in/out  OUTPUT
                -- # dims  4
                -- dim #0  1
                -- dim #1  18
                -- dim #2  56
                -- dim #3  56
[TRT]       binding 2
                -- index   2
                -- name    'paf'
                -- type    FP32
                -- in/out  OUTPUT
                -- # dims  4
                -- dim #0  1
                -- dim #1  42
                -- dim #2  56
                -- dim #3  56
[TRT]    
[TRT]    binding to input 0 input  binding index:  0
[TRT]    binding to input 0 input  dims (b=1 c=3 h=224 w=224) size=602112
[TRT]    binding to output 0 cmap  binding index:  1
[TRT]    binding to output 0 cmap  dims (b=1 c=18 h=56 w=56) size=225792
[TRT]    binding to output 1 paf  binding index:  2
[TRT]    binding to output 1 paf  dims (b=1 c=42 h=56 w=56) size=526848
[TRT]    
[0;32m[TRT]    device GPU, /usr/local/bin/networks/Pose-ResNet18-Body/pose_resnet18_body.onnx initialized.
[0m[OpenGL] glDisplay -- X screen 0 resolution:  1920x1080
[OpenGL] glDisplay -- X window resolution:    1920x1080
[OpenGL] glDisplay -- display device initialized (1920x1080)
[0;32m[video]  created glDisplay from display://0
[0m------------------------------------------------
glDisplay video options:
------------------------------------------------
  -- URI: display://0
     - protocol:  display
     - location:  0
  -- deviceType: display
  -- ioType:     output
  -- codec:      raw
  -- width:      1920
  -- height:     1080
  -- frameRate:  0.000000
  -- bitRate:    0
  -- numBuffers: 4
  -- zeroCopy:   true
  -- flipMethod: none
  -- loop:       0
  -- rtspLatency 2000
------------------------------------------------

poseNet -- loading pose estimation model from:
        -- model        networks/Pose-ResNet18-Body/pose_resnet18_body.onnx
        -- topology     networks/Pose-ResNet18-Body/human_pose.json
        -- colors       networks/Pose-ResNet18-Body/colors.txt
        -- input_blob   'input'
        -- output_cmap  'cmap'
        -- output_paf   'paf'
        -- threshold    0.150000
        -- batch_size   1

[TRT]    topology -- keypoint 0  nose
[TRT]    topology -- keypoint 1  left_eye
[TRT]    topology -- keypoint 2  right_eye
[TRT]    topology -- keypoint 3  left_ear
[TRT]    topology -- keypoint 4  right_ear
[TRT]    topology -- keypoint 5  left_shoulder
[TRT]    topology -- keypoint 6  right_shoulder
[TRT]    topology -- keypoint 7  left_elbow
[TRT]    topology -- keypoint 8  right_elbow
[TRT]    topology -- keypoint 9  left_wrist
[TRT]    topology -- keypoint 10  right_wrist
[TRT]    topology -- keypoint 11  left_hip
[TRT]    topology -- keypoint 12  right_hip
[TRT]    topology -- keypoint 13  left_knee
[TRT]    topology -- keypoint 14  right_knee
[TRT]    topology -- keypoint 15  left_ankle
[TRT]    topology -- keypoint 16  right_ankle
[TRT]    topology -- keypoint 17  neck
[TRT]    topology -- skeleton link 0  16 14
[TRT]    topology -- skeleton link 1  14 12
[TRT]    topology -- skeleton link 2  17 15
[TRT]    topology -- skeleton link 3  15 13
[TRT]    topology -- skeleton link 4  12 13
[TRT]    topology -- skeleton link 5  6 8
[TRT]    topology -- skeleton link 6  7 9
[TRT]    topology -- skeleton link 7  8 10
[TRT]    topology -- skeleton link 8  9 11
[TRT]    topology -- skeleton link 9  2 3
[TRT]    topology -- skeleton link 10  1 2
[TRT]    topology -- skeleton link 11  1 3
[TRT]    topology -- skeleton link 12  2 4
[TRT]    topology -- skeleton link 13  3 5
[TRT]    topology -- skeleton link 14  4 6
[TRT]    topology -- skeleton link 15  5 7
[TRT]    topology -- skeleton link 16  18 1
[TRT]    topology -- skeleton link 17  18 6
[TRT]    topology -- skeleton link 18  18 7
[TRT]    topology -- skeleton link 19  18 12
[TRT]    topology -- skeleton link 20  18 13
[TRT]    poseNet -- keypoint 00 'nose'  color 255 0 85 255
[TRT]    poseNet -- keypoint 01 'left_eye'  color 255 0 0 255
[TRT]    poseNet -- keypoint 02 'right_eye'  color 255 85 0 255
[TRT]    poseNet -- keypoint 03 'left_ear'  color 255 170 0 255
[TRT]    poseNet -- keypoint 04 'right_ear'  color 255 255 0 255
[TRT]    poseNet -- keypoint 05 'left_shoulder'  color 170 255 0 255
[TRT]    poseNet -- keypoint 06 'right_shoulder'  color 85 255 0 255
[TRT]    poseNet -- keypoint 07 'left_elbow'  color 0 255 0 255
[TRT]    poseNet -- keypoint 08 'right_elbow'  color 0 255 85 255
[TRT]    poseNet -- keypoint 09 'left_wrist'  color 0 255 170 255
[TRT]    poseNet -- keypoint 10 'right_wrist'  color 0 255 255 255
[TRT]    poseNet -- keypoint 11 'left_hip'  color 0 170 255 255
[TRT]    poseNet -- keypoint 12 'right_hip'  color 0 85 255 255
[TRT]    poseNet -- keypoint 13 'left_knee'  color 0 0 255 255
[TRT]    poseNet -- keypoint 14 'right_knee'  color 255 0 170 255
[TRT]    poseNet -- keypoint 15 'left_ankle'  color 170 0 255 255
[TRT]    poseNet -- keypoint 16 'right_ankle'  color 255 0 255 255
[TRT]    poseNet -- keypoint 17 'neck'  color 85 0 255 255
[TRT]    poseNet -- loaded 18 class colors
[TRT]    TensorRT version 8.0.1
[TRT]    detected model format - ONNX  (extension '.onnx')
[TRT]    desired precision specified for GPU: FASTEST
[0;33m[TRT]    requested fasted precision for device GPU without providing valid calibrator, disabling INT8
[0m[0;33m[TRT]    The logger passed into createInferBuilder differs from one already provided for an existing builder, runtime, or refitter. TensorRT maintains only a single logger pointer at any given time, so the existing value, which can be retrieved with getLogger(), will be used instead. In order to use a new logger, first destroy all existing builder, runner or refitter objects.

[0m[TRT]    [MemUsageChange] Init CUDA: CPU +0, GPU +0, now: CPU 635, GPU 1910 (MiB)
[TRT]    native precisions detected for GPU:  FP32, FP16
[TRT]    selecting fastest native precision for GPU:  FP16
[TRT]    attempting to open engine cache file /usr/local/bin/networks/Pose-ResNet18-Body/pose_resnet18_body.onnx.1.1.8001.GPU.FP16.engine
[TRT]    loading network plan from engine cache... /usr/local/bin/networks/Pose-ResNet18-Body/pose_resnet18_body.onnx.1.1.8001.GPU.FP16.engine
[0;32m[TRT]    device GPU, loaded /usr/local/bin/networks/Pose-ResNet18-Body/pose_resnet18_body.onnx
[0m[TRT]    [MemUsageChange] Init CUDA: CPU +0, GPU +0, now: CPU 715, GPU 1910 (MiB)
[TRT]    Loaded engine size: 79 MB
[TRT]    [MemUsageSnapshot] deserializeCudaEngine begin: CPU 715 MiB, GPU 1910 MiB
[0;33m[TRT]    Using an engine plan file across different models of devices is not recommended and is likely to affect performance or even cause errors.
[0m[TRT]    Using cublas a tactic source
[TRT]    [MemUsageChange] Init cuBLAS/cuBLASLt: CPU +0, GPU -7, now: CPU 715, GPU 1904 (MiB)
[TRT]    Using cuDNN as a tactic source
[TRT]    [MemUsageChange] Init cuDNN: CPU +0, GPU +1, now: CPU 715, GPU 1905 (MiB)
[TRT]    [MemUsageChange] Init cuBLAS/cuBLASLt: CPU +0, GPU +0, now: CPU 715, GPU 1902 (MiB)
[TRT]    Deserialization required 5633918 microseconds.
[TRT]    [MemUsageSnapshot] deserializeCudaEngine end: CPU 715 MiB, GPU 1903 MiB
[TRT]    [MemUsageSnapshot] ExecutionContext creation begin: CPU 715 MiB, GPU 1906 MiB
[TRT]    Using cublas a tactic source
[TRT]    [MemUsageChange] Init cuBLAS/cuBLASLt: CPU +0, GPU +3, now: CPU 715, GPU 1909 (MiB)
[TRT]    Using cuDNN as a tactic source
[TRT]    [MemUsageChange] Init cuDNN: CPU +0, GPU +0, now: CPU 715, GPU 1909 (MiB)
[TRT]    Total per-runner device memory is 49521152
[TRT]    Total per-runner host memory is 30160
[TRT]    Allocated activation device memory of size 18128896
[TRT]    [MemUsageSnapshot] ExecutionContext creation end: CPU 715 MiB, GPU 1909 MiB
[TRT]    
[TRT]    CUDA engine context initialized on device GPU:
[TRT]       -- layers       43
[TRT]       -- maxBatchSize 1
[TRT]       -- deviceMemory 18128896
[TRT]       -- bindings     3
[TRT]       binding 0
                -- index   0
                -- name    'input'
                -- type    FP32
                -- in/out  INPUT
                -- # dims  4
                -- dim #0  1
                -- dim #1  3
                -- dim #2  224
                -- dim #3  224
[TRT]       binding 1
                -- index   1
                -- name    'cmap'
                -- type    FP32
                -- in/out  OUTPUT
                -- # dims  4
                -- dim #0  1
                -- dim #1  18
                -- dim #2  56
                -- dim #3  56
[TRT]       binding 2
                -- index   2
                -- name    'paf'
                -- type    FP32
                -- in/out  OUTPUT
                -- # dims  4
                -- dim #0  1
                -- dim #1  42
                -- dim #2  56
                -- dim #3  56
[TRT]    
[TRT]    binding to input 0 input  binding index:  0
[TRT]    binding to input 0 input  dims (b=1 c=3 h=224 w=224) size=602112
[TRT]    binding to output 0 cmap  binding index:  1
[TRT]    binding to output 0 cmap  dims (b=1 c=18 h=56 w=56) size=225792
[TRT]    binding to output 1 paf  binding index:  2
[TRT]    binding to output 1 paf  dims (b=1 c=42 h=56 w=56) size=526848
[TRT]    
[0;32m[TRT]    device GPU, /usr/local/bin/networks/Pose-ResNet18-Body/pose_resnet18_body.onnx initialized.
[0m[OpenGL] glDisplay -- X screen 0 resolution:  1920x1080
[OpenGL] glDisplay -- X window resolution:    1920x1080
[OpenGL] glDisplay -- display device initialized (1920x1080)
[0;32m[video]  created glDisplay from display://0
[0m------------------------------------------------
glDisplay video options:
------------------------------------------------
  -- URI: display://0
     - protocol:  display
     - location:  0
  -- deviceType: display
  -- ioType:     output
  -- codec:      raw
  -- width:      1920
  -- height:     1080
  -- frameRate:  0.000000
  -- bitRate:    0
  -- numBuffers: 4
  -- zeroCopy:   true
  -- flipMethod: none
  -- loop:       0
  -- rtspLatency 2000
------------------------------------------------

poseNet -- loading pose estimation model from:
        -- model        networks/Pose-ResNet18-Body/pose_resnet18_body.onnx
        -- topology     networks/Pose-ResNet18-Body/human_pose.json
        -- colors       networks/Pose-ResNet18-Body/colors.txt
        -- input_blob   'input'
        -- output_cmap  'cmap'
        -- output_paf   'paf'
        -- threshold    0.150000
        -- batch_size   1

[TRT]    topology -- keypoint 0  nose
[TRT]    topology -- keypoint 1  left_eye
[TRT]    topology -- keypoint 2  right_eye
[TRT]    topology -- keypoint 3  left_ear
[TRT]    topology -- keypoint 4  right_ear
[TRT]    topology -- keypoint 5  left_shoulder
[TRT]    topology -- keypoint 6  right_shoulder
[TRT]    topology -- keypoint 7  left_elbow
[TRT]    topology -- keypoint 8  right_elbow
[TRT]    topology -- keypoint 9  left_wrist
[TRT]    topology -- keypoint 10  right_wrist
[TRT]    topology -- keypoint 11  left_hip
[TRT]    topology -- keypoint 12  right_hip
[TRT]    topology -- keypoint 13  left_knee
[TRT]    topology -- keypoint 14  right_knee
[TRT]    topology -- keypoint 15  left_ankle
[TRT]    topology -- keypoint 16  right_ankle
[TRT]    topology -- keypoint 17  neck
[TRT]    topology -- skeleton link 0  16 14
[TRT]    topology -- skeleton link 1  14 12
[TRT]    topology -- skeleton link 2  17 15
[TRT]    topology -- skeleton link 3  15 13
[TRT]    topology -- skeleton link 4  12 13
[TRT]    topology -- skeleton link 5  6 8
[TRT]    topology -- skeleton link 6  7 9
[TRT]    topology -- skeleton link 7  8 10
[TRT]    topology -- skeleton link 8  9 11
[TRT]    topology -- skeleton link 9  2 3
[TRT]    topology -- skeleton link 10  1 2
[TRT]    topology -- skeleton link 11  1 3
[TRT]    topology -- skeleton link 12  2 4
[TRT]    topology -- skeleton link 13  3 5
[TRT]    topology -- skeleton link 14  4 6
[TRT]    topology -- skeleton link 15  5 7
[TRT]    topology -- skeleton link 16  18 1
[TRT]    topology -- skeleton link 17  18 6
[TRT]    topology -- skeleton link 18  18 7
[TRT]    topology -- skeleton link 19  18 12
[TRT]    topology -- skeleton link 20  18 13
[TRT]    poseNet -- keypoint 00 'nose'  color 255 0 85 255
[TRT]    poseNet -- keypoint 01 'left_eye'  color 255 0 0 255
[TRT]    poseNet -- keypoint 02 'right_eye'  color 255 85 0 255
[TRT]    poseNet -- keypoint 03 'left_ear'  color 255 170 0 255
[TRT]    poseNet -- keypoint 04 'right_ear'  color 255 255 0 255
[TRT]    poseNet -- keypoint 05 'left_shoulder'  color 170 255 0 255
[TRT]    poseNet -- keypoint 06 'right_shoulder'  color 85 255 0 255
[TRT]    poseNet -- keypoint 07 'left_elbow'  color 0 255 0 255
[TRT]    poseNet -- keypoint 08 'right_elbow'  color 0 255 85 255
[TRT]    poseNet -- keypoint 09 'left_wrist'  color 0 255 170 255
[TRT]    poseNet -- keypoint 10 'right_wrist'  color 0 255 255 255
[TRT]    poseNet -- keypoint 11 'left_hip'  color 0 170 255 255
[TRT]    poseNet -- keypoint 12 'right_hip'  color 0 85 255 255
[TRT]    poseNet -- keypoint 13 'left_knee'  color 0 0 255 255
[TRT]    poseNet -- keypoint 14 'right_knee'  color 255 0 170 255
[TRT]    poseNet -- keypoint 15 'left_ankle'  color 170 0 255 255
[TRT]    poseNet -- keypoint 16 'right_ankle'  color 255 0 255 255
[TRT]    poseNet -- keypoint 17 'neck'  color 85 0 255 255
[TRT]    poseNet -- loaded 18 class colors
[TRT]    TensorRT version 8.0.1
[TRT]    detected model format - ONNX  (extension '.onnx')
[TRT]    desired precision specified for GPU: FASTEST
[0;33m[TRT]    requested fasted precision for device GPU without providing valid calibrator, disabling INT8
[0m[0;33m[TRT]    The logger passed into createInferBuilder differs from one already provided for an existing builder, runtime, or refitter. TensorRT maintains only a single logger pointer at any given time, so the existing value, which can be retrieved with getLogger(), will be used instead. In order to use a new logger, first destroy all existing builder, runner or refitter objects.

[0m[TRT]    [MemUsageChange] Init CUDA: CPU +0, GPU +0, now: CPU 636, GPU 1914 (MiB)
[TRT]    native precisions detected for GPU:  FP32, FP16
[TRT]    selecting fastest native precision for GPU:  FP16
[TRT]    attempting to open engine cache file /usr/local/bin/networks/Pose-ResNet18-Body/pose_resnet18_body.onnx.1.1.8001.GPU.FP16.engine
[TRT]    loading network plan from engine cache... /usr/local/bin/networks/Pose-ResNet18-Body/pose_resnet18_body.onnx.1.1.8001.GPU.FP16.engine
[0;32m[TRT]    device GPU, loaded /usr/local/bin/networks/Pose-ResNet18-Body/pose_resnet18_body.onnx
[0m[TRT]    [MemUsageChange] Init CUDA: CPU +0, GPU +0, now: CPU 716, GPU 1911 (MiB)
[TRT]    Loaded engine size: 79 MB
[TRT]    [MemUsageSnapshot] deserializeCudaEngine begin: CPU 716 MiB, GPU 1915 MiB
[0;33m[TRT]    Using an engine plan file across different models of devices is not recommended and is likely to affect performance or even cause errors.
[0m[TRT]    Using cublas a tactic source
[TRT]    [MemUsageChange] Init cuBLAS/cuBLASLt: CPU +0, GPU +19, now: CPU 716, GPU 1943 (MiB)
[TRT]    Using cuDNN as a tactic source
[TRT]    [MemUsageChange] Init cuDNN: CPU +0, GPU +7, now: CPU 716, GPU 1950 (MiB)
[TRT]    [MemUsageChange] Init cuBLAS/cuBLASLt: CPU +0, GPU +0, now: CPU 716, GPU 1951 (MiB)
[TRT]    Deserialization required 6528251 microseconds.
[TRT]    [MemUsageSnapshot] deserializeCudaEngine end: CPU 716 MiB, GPU 1951 MiB
[TRT]    [MemUsageSnapshot] ExecutionContext creation begin: CPU 716 MiB, GPU 1952 MiB
[TRT]    Using cublas a tactic source
[TRT]    [MemUsageChange] Init cuBLAS/cuBLASLt: CPU +0, GPU +0, now: CPU 716, GPU 1952 (MiB)
[TRT]    Using cuDNN as a tactic source
[TRT]    [MemUsageChange] Init cuDNN: CPU +0, GPU +0, now: CPU 716, GPU 1952 (MiB)
[TRT]    Total per-runner device memory is 49521152
[TRT]    Total per-runner host memory is 30160
[TRT]    Allocated activation device memory of size 18128896
[TRT]    [MemUsageSnapshot] ExecutionContext creation end: CPU 716 MiB, GPU 1929 MiB
[TRT]    
[TRT]    CUDA engine context initialized on device GPU:
[TRT]       -- layers       43
[TRT]       -- maxBatchSize 1
[TRT]       -- deviceMemory 18128896
[TRT]       -- bindings     3
[TRT]       binding 0
                -- index   0
                -- name    'input'
                -- type    FP32
                -- in/out  INPUT
                -- # dims  4
                -- dim #0  1
                -- dim #1  3
                -- dim #2  224
                -- dim #3  224
[TRT]       binding 1
                -- index   1
                -- name    'cmap'
                -- type    FP32
                -- in/out  OUTPUT
                -- # dims  4
                -- dim #0  1
                -- dim #1  18
                -- dim #2  56
                -- dim #3  56
[TRT]       binding 2
                -- index   2
                -- name    'paf'
                -- type    FP32
                -- in/out  OUTPUT
                -- # dims  4
                -- dim #0  1
                -- dim #1  42
                -- dim #2  56
                -- dim #3  56
[TRT]    
[TRT]    binding to input 0 input  binding index:  0
[TRT]    binding to input 0 input  dims (b=1 c=3 h=224 w=224) size=602112
[TRT]    binding to output 0 cmap  binding index:  1
[TRT]    binding to output 0 cmap  dims (b=1 c=18 h=56 w=56) size=225792
[TRT]    binding to output 1 paf  binding index:  2
[TRT]    binding to output 1 paf  dims (b=1 c=42 h=56 w=56) size=526848
[TRT]    
[0;32m[TRT]    device GPU, /usr/local/bin/networks/Pose-ResNet18-Body/pose_resnet18_body.onnx initialized.
[0m[gstreamer] initialized gstreamer, version 1.14.5.0
[gstreamer] gstCamera -- attempting to create device csi://0
[gstreamer] gstCamera pipeline string:
[gstreamer] nvarguscamerasrc sensor-id=0 ! video/x-raw(memory:NVMM), width=(int)1280, height=(int)720, framerate=30/1, format=(string)NV12 ! nvvidconv flip-method=0 ! video/x-raw(memory:NVMM) ! appsink name=mysink
[gstreamer] gstCamera successfully created device csi://0
[0;32m[video]  created gstCamera from csi://0
[0m------------------------------------------------
gstCamera video options:
------------------------------------------------
  -- URI: csi://0
     - protocol:  csi
     - location:  0
  -- deviceType: csi
  -- ioType:     input
  -- codec:      raw
  -- width:      1280
  -- height:     720
  -- frameRate:  30.000000
  -- bitRate:    0
  -- numBuffers: 4
  -- zeroCopy:   true
  -- flipMethod: none
  -- loop:       0
  -- rtspLatency 2000
------------------------------------------------
[OpenGL] glDisplay -- X screen 0 resolution:  1920x1080
[OpenGL] glDisplay -- X window resolution:    1920x1080
[OpenGL] glDisplay -- display device initialized (1920x1080)
[0;32m[video]  created glDisplay from display://0
[0m------------------------------------------------
glDisplay video options:
------------------------------------------------
  -- URI: display://0
     - protocol:  display
     - location:  0
  -- deviceType: display
  -- ioType:     output
  -- codec:      raw
  -- width:      1920
  -- height:     1080
  -- frameRate:  0.000000
  -- bitRate:    0
  -- numBuffers: 4
  -- zeroCopy:   true
  -- flipMethod: none
  -- loop:       0
  -- rtspLatency 2000
------------------------------------------------
[gstreamer] gstCamera -- attempting to create device csi://0
[gstreamer] gstCamera pipeline string:
[gstreamer] nvarguscamerasrc sensor-id=0 ! video/x-raw(memory:NVMM), width=(int)1280, height=(int)720, framerate=30/1, format=(string)NV12 ! nvvidconv flip-method=2 ! video/x-raw(memory:NVMM) ! appsink name=mysink
[gstreamer] gstCamera successfully created device csi://0
[0;32m[video]  created gstCamera from csi://0
[0m------------------------------------------------
gstCamera video options:
------------------------------------------------
  -- URI: csi://0
     - protocol:  csi
     - location:  0
  -- deviceType: csi
  -- ioType:     input
  -- codec:      raw
  -- width:      1280
  -- height:     720
  -- frameRate:  30.000000
  -- bitRate:    0
  -- numBuffers: 4
  -- zeroCopy:   true
  -- flipMethod: rotate-180
  -- loop:       0
  -- rtspLatency 2000
------------------------------------------------
[0;33m[gstreamer] gstEncoder -- codec not specified, defaulting to H.264
[0m[gstreamer] gstEncoder -- pipeline launch string:
[gstreamer] appsrc name=mysource is-live=true do-timestamp=true format=3 ! omxh264enc bitrate=4000000 ! video/x-h264 !  h264parse ! qtmux ! filesink location=videos/demo.mp4
[0;32m[video]  created gstEncoder from file:///home/samjet/WeightLiftingCoach/videos/demo.mp4
[0m------------------------------------------------
gstEncoder video options:
------------------------------------------------
  -- URI: file:///home/samjet/WeightLiftingCoach/videos/demo.mp4
     - protocol:  file
     - location:  videos/demo.mp4
     - extension: mp4
  -- deviceType: file
  -- ioType:     output
  -- codec:      h264
  -- width:      0
  -- height:     0
  -- frameRate:  30.000000
  -- bitRate:    4000000
  -- numBuffers: 4
  -- zeroCopy:   true
  -- flipMethod: none
  -- loop:       0
  -- rtspLatency 2000
------------------------------------------------
[OpenGL] glDisplay -- X screen 0 resolution:  1920x1080
[OpenGL] glDisplay -- X window resolution:    1920x1080
[OpenGL] glDisplay -- display device initialized (1920x1080)
[0;32m[video]  created glDisplay from display://0
[0m------------------------------------------------
glDisplay video options:
------------------------------------------------
  -- URI: display://0
     - protocol:  display
     - location:  0
  -- deviceType: display
  -- ioType:     output
  -- codec:      raw
  -- width:      1920
  -- height:     1080
  -- frameRate:  0.000000
  -- bitRate:    0
  -- numBuffers: 4
  -- zeroCopy:   true
  -- flipMethod: none
  -- loop:       0
  -- rtspLatency 2000
------------------------------------------------
[gstreamer] opening gstCamera for streaming, transitioning pipeline to GST_STATE_PLAYING
[gstreamer] gstreamer changed state from NULL to READY ==> mysink
[gstreamer] gstreamer changed state from NULL to READY ==> capsfilter3
[gstreamer] gstreamer changed state from NULL to READY ==> nvvconv1
[gstreamer] gstreamer changed state from NULL to READY ==> capsfilter2
[gstreamer] gstreamer changed state from NULL to READY ==> nvarguscamerasrc1
[gstreamer] gstreamer changed state from NULL to READY ==> pipeline1
[gstreamer] gstreamer changed state from READY to PAUSED ==> capsfilter3
[gstreamer] gstreamer changed state from READY to PAUSED ==> nvvconv1
[gstreamer] gstreamer changed state from READY to PAUSED ==> capsfilter2
[gstreamer] gstreamer stream status CREATE ==> src
[gstreamer] gstreamer changed state from READY to PAUSED ==> nvarguscamerasrc1
[gstreamer] gstreamer changed state from READY to PAUSED ==> pipeline1
[gstreamer] gstreamer stream status ENTER ==> src
[gstreamer] gstreamer message new-clock ==> pipeline1
[gstreamer] gstreamer changed state from PAUSED to PLAYING ==> capsfilter3
[gstreamer] gstreamer message stream-start ==> pipeline1
[gstreamer] gstreamer changed state from PAUSED to PLAYING ==> nvvconv1
[gstreamer] gstreamer changed state from PAUSED to PLAYING ==> capsfilter2
[gstreamer] gstreamer changed state from PAUSED to PLAYING ==> nvarguscamerasrc1
GST_ARGUS: Creating output stream
CONSUMER: Waiting until producer is connected...
GST_ARGUS: Available Sensor modes :
GST_ARGUS: 3264 x 2464 FR = 21.000000 fps Duration = 47619048 ; Analog Gain range min 1.000000, max 10.625000; Exposure Range min 13000, max 683709000;

GST_ARGUS: 3264 x 1848 FR = 28.000001 fps Duration = 35714284 ; Analog Gain range min 1.000000, max 10.625000; Exposure Range min 13000, max 683709000;

GST_ARGUS: 1920 x 1080 FR = 29.999999 fps Duration = 33333334 ; Analog Gain range min 1.000000, max 10.625000; Exposure Range min 13000, max 683709000;

GST_ARGUS: 1640 x 1232 FR = 29.999999 fps Duration = 33333334 ; Analog Gain range min 1.000000, max 10.625000; Exposure Range min 13000, max 683709000;

GST_ARGUS: 1280 x 720 FR = 59.999999 fps Duration = 16666667 ; Analog Gain range min 1.000000, max 10.625000; Exposure Range min 13000, max 683709000;

GST_ARGUS: 1280 x 720 FR = 120.000005 fps Duration = 8333333 ; Analog Gain range min 1.000000, max 10.625000; Exposure Range min 13000, max 683709000;

GST_ARGUS: Running with following settings:
   Camera index = 0 
   Camera mode  = 5 
   Output Stream W = 1280 H = 720 
   seconds to Run    = 0 
   Frame Rate = 120.000005 
GST_ARGUS: Setup Complete, Starting captures for 0 seconds
GST_ARGUS: Starting repeat capture requests.
CONSUMER: Producer has connected; continuing.
[gstreamer] gstCamera -- onPreroll
[gstreamer] gstBufferManager recieve caps:  video/x-raw(memory:NVMM), width=(int)1280, height=(int)720, format=(string)NV12, framerate=(fraction)30/1
[gstreamer] gstBufferManager -- recieved firs